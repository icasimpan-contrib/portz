#!/bin/bash

inform "creating package info (${package_name}.PKGINFO)"
pkginfo_dir=$(dirname $pkginfo_file)
mkdir -p "${staging_dir}${pkginfo_dir}"

foobar()
{
	local V="$(eval echo "\$$1")"
	if [ -n "$V" ] ; then
		echo -n "$1=\"$V\" "
	fi
}
influential_args()
{
	foobar prefix
	foobar exec_prefix
	foobar arch
	foobar CC
	foobar CXX
	foobar LD
	foobar CFLAGS
	foobar CXXFLAGS
	foobar LFFLAGS
	foobar LDLIBS
	foobar PKG_CONFIG_PATH
}

(
	echo "name=${package_name}"
	echo "version=${package_version}"
	if [ -n "$baseurl" ] ; then
		echo "baseurl=${package_baseurl}"
	elif [ -n "${svn_path}" ] ; then
		echo "svn_path=$svn_path"
		echo "svn_revision=$(cd $src_dir ; svnversion ; )"
	elif [ -n "${mtn_url}" ] ; then
		echo mtn_url="$mtn_url"
		echo mtn_revision="$(cd $src_dir ; mtn automate get_base_revision_id)"
	fi
	if [ -n "$build_command" ] ; then
		echo "build_command=$(influential_args) $build_command"
	else
		echo "build_command=$(influential_args) portz_install ${package_name}"
	fi
) > ${staging_dir}${pkginfo_file}

inform "package info"
cat "${staging_dir}${pkginfo_file}" | bashfoo.prefix "    "

# jedit: :tabSize=8:indentSize=4:noTabs=true:mode=shellscript:

