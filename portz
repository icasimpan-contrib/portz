#!/bin/bash

##
## portz - minimal port system by zbigg
##          (custom software bundling system)
##
## usage:
##   portz [options] install PACKAGE
##   portz [options] easy_install name=foo PACKAGE_URL
##   portz [options] get PACKAGE
##   portz [options] packback
##
## options
##   --prefix PATH      -- change installation prefix, default ($prefix, /usr/local)
##   --exec-prefix PATH -- change installation prefix, default ($exec_prefix, $prefix)
##   --debug|-d  -- debug mode, be more verbose
##   --quiet|-q  -- quiet mode, show only warnings and errors
##

#if type bashfoo >/dev/null 2>/dev/null ; then

portz_script_dir="$(dirname $BASH_SOURCE)"
if [ -f ${portz_script_dir}/bashfoo/bashfoo.sh ] ; then
    export bashfoo_libdir="${portz_script_dir}/bashfoo"
    source ${bashfoo_libdir}/bashfoo.sh
elif [ -f ${portz_script_dir}/../lib/portz/bashfoo/bashfoo.sh ] ; then
    export bashfoo_libdir="${portz_script_dir}/../lib/portz/bashfoo"
    source  ${bashfoo_libdir}/bashfoo.sh
elif [ type bashfoo >/dev/null 2>/dev/null ] ; then
    eval `bashfoo --eval-out`
else
    echo "$0: bashfoo not found or incorrect, panic" 2>&1
    exit 1
fi

bashfoo_require path

portz_script_dir=$(abspath $portz_script_dir)
if [ -f "${portz_script_dir}/scripts/runtime.sh" ] ; then
    portz_libdir="${portz_script_dir}"
elif [ -f "${portz_script_dir}/../lib/portz/scripts/runtime.sh" ] ; then
    portz_libdir="${portz_script_dir}/../lib/portz/scripts/runtime.sh"
else
    echo "$0: rest of portz not found or incorrect, panic" 2>&1
    exit 1
fi

bashfoo_require auto_usage

export portz_libdir
export bashfoo_libdir

portz_quiet=${portz_quiet-1}

while [ -n "$1" ] ; do
    maybe_show_auto_help
    if log_process_options "$1"; then
        shift
        continue
    fi

    case "$1" in
        --prefix)
            [ -z "$2" ] && fail_on_bad_usage "$1, argument required"
            prefix=$2
            export prefix
            shift ; shift
            ;;
        --exec-prefix|--exec_prefix)
            [ -z "$2" ] && fail_on_bad_usage "$1, argument required"
            exec_prefix=$2
            export exec_prefix
            shift ; shift
            ;;
        -r|--repo)
            [ -z "$2" ] && fail_on_bad_usage "$1, argument required"
            portz_repo="$(abspath $2)"
            export portz_repo
            shift ; shift
            ;;
        install|invoke|get|easy_install|query|packback|uninstall|build_site)
            action=$1
            shift
            break
            ;;
        *)
            fail_on_bad_usage "'$1' -- invalid action or option"
            ;;
    esac
done

[ -z "$action" ] && fail_on_bad_usage "action required"

export portz_libdir

log_debug "action=$action"
log_debug "portz_libdir=$portz_libdir"
log_debug "prefix=$prefix"
log_debug "exec_prefix=$exec_prefix"

exec "${portz_libdir}/portz_${action}" "$@"

