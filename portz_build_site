#!/bin/bash
#
# This file is part of 'portz'
#
# Copyright (C) Zbigniew Zagorski <z.zagorski@gmail.com> and others, 
# licensed to the public under the terms of the GNU GPL (>= 2)
# see the file COPYING for details
#
# I.e., do what you like, but keep copyright and there's NO WARRANTY. 
#

PNAME=portz_build_site
export PNAME

set -e
#set -x

portz_libdir=${portz_libdir-`pwd`}
. ${portz_libdir}/scripts/runtime.sh
. ${portz_scripts}/functions.sh
. ${portz_scripts}/build_defs.sh
. ${portz_scripts}/package_defs.sh

packages_to_install="$*"

find_available_packages()
(
    local ddd=$1
    (
        shopt -s failglob
        (cd $ddd ; ls -1 *.portz || true ) | sed -e 's/\.portz//' 
        if [ -f "$1/portz_import_packages" ] ; then
            cat $1/portz_import_packages
        fi
        echo "$param_packages"
    ) | sort -u
)

if [ -z "$packages_to_install" ] ; then
    packages_to_install="$(find_available_packages $portz_repo)"
fi

log_info "packages    = $packages_to_install"

if [ -z "$packages_to_install" ] ; then
    log_error "no packag definitions found in prefix '$prefix'"
    exit 1
fi

overall_result=0
for package in $packages_to_install ; do
    (
        load_package "$package"
        if portz_check_installed $package_name ; then
            log_info "$package_name -> already installed:"
            portz_show_pkginfo $package_name
        else
            log_info "$package_name -> not installed, installing"
            (
                ${portz_libdir}/portz_install $package
            )
            exit $?
        fi
    )
    r=$?
    if [ "$r" != 0 ] ; then
        overall_result=$r
        failed_packages="$failed_packages $package"
    fi
done
if [ "$overall_result" != 0 ] ; then
    log_info "failure, following packages failed to install: $failed_packages"
fi
exit $overall_result

# jedit: :tabSize=8:indentSize=4:noTabs=true:mode=shellscript:

